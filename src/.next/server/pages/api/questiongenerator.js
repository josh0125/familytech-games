"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/questiongenerator";
exports.ids = ["pages/api/questiongenerator"];
exports.modules = {

/***/ "(api)/./data/fsdatastructures.js":
/*!**********************************!*\
  !*** ./data/fsdatastructures.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Person\": () => (/* binding */ Person),\n/* harmony export */   \"default\": () => (/* binding */ Tree)\n/* harmony export */ });\nclass Tree {\n    constructor(){\n        //map of ascendancy number to index\n        this.personMap = new Map();\n    }\n    setPersons(personMap) {\n        this.personMap = personMap;\n    }\n    addPerson = function(person) {\n        this.personMap.set(person.a_num, person);\n    };\n    getPerson = function(a_num) {\n        return this.personMap.get(a_num.toString());\n    };\n    getSpouse = function(a_num) {\n        let person = this.getPerson(a_num);\n        if (person == null) {\n            return null;\n        }\n        if (person.gender == \"Male\") {\n            let spouse = this.getPerson(a_num + 1);\n            if (spouse.gender == \"Female\") {\n                return spouse;\n            } else {\n                return null;\n            }\n        } else {\n            return this.getPerson(a_num - 1);\n        }\n    };\n    getFather = function(a_num) {\n        let child = this.getPerson(a_num);\n        if (child == null) {\n            return null;\n        }\n        let fa_num = 2 * a_num;\n        return this.getPerson(fa_num);\n    };\n    getMother = function(a_num) {\n        let child = this.getPerson(a_num);\n        if (child == null) {\n            return null;\n        }\n        let ma_num = 2 * a_num + 1;\n        return this.getPerson(ma_num);\n    };\n    getChild = function(a_num) {\n        let parent = this.getPerson(a_num);\n        if (parent == null) {\n            return null;\n        }\n        if (parent.gender == \"Male\") {\n            return this.getPerson(a_num / 2);\n        } else {\n            return this.getPerson((a_num - 1) / 2);\n        }\n    };\n    insertRelationships = function(relationships) {\n        var pidMap = new Map();\n        for (const person of this.personMap.values()){\n            pidMap.set(person.pid, person.a_num);\n        }\n        for (const relationship of relationships){\n            if (!relationship.facts) continue;\n            if (relationship.facts[0].type == \"http://gedcomx.org/Marriage\") {\n                let person1 = this.personMap.get(pidMap.get(relationship.person1.resourceId));\n                let person2 = this.personMap.get(pidMap.get(relationship.person2.resourceId));\n                if (person1 && person2 && relationship.facts[0].date) person1.addMarriageDate(relationship.facts[0].date.original);\n                if (person1 && person2 && relationship.facts[0].place) person1.addMarriagePlace(relationship.facts[0].place.original);\n                if (person1 && person2 && relationship.facts[0].date) person2.addMarriageDate(relationship.facts[0].date.original);\n                if (person1 && person2 && relationship.facts[0].place) person2.addMarriagePlace(relationship.facts[0].place.original);\n            }\n        }\n        ;\n    };\n};\nclass Person {\n    constructor(data){\n        this.name = new Name(data);\n        this.gender = data.display.gender;\n        this.living = data.living;\n        this.a_num = parseInt(data.display.ascendancyNumber) || undefined; //used as a pid\n        this.generation = (this.a_num << 0).toString(2).length;\n        this.pid = data.id; //unused\n        this.birthDate = new MyDate(data.display.birthDate);\n        this.deathDate = new MyDate(data.display.deathDate);\n        this.birthPlace = normalizePlace(data.display.birthPlace);\n        this.deathPlace = normalizePlace(data.display.deathPlace);\n        var lifespanArray = data.display.lifespan.split(\"-\");\n        var lifespanBirth = lifespanArray.length > 0 ? parseInt(lifespanArray[0]) : undefined;\n        var lifespanDeath = lifespanArray.length > 1 ? parseInt(lifespanArray[1]) : undefined;\n        this.lifespan = {\n            string: data.display.lifespan,\n            birth: lifespanBirth,\n            death: lifespanDeath,\n            years: lifespanBirth && lifespanDeath ? lifespanDeath - lifespanBirth : undefined,\n            toString: function() {\n                return this.string;\n            },\n            equals: function(other) {\n                return other.birth == this.birth && other.death == this.death;\n            }\n        };\n        this.occupation = getOccupation(data);\n    }\n    addMarriageDate = function(marriageDate) {\n        this.marriageDate = new MyDate(marriageDate);\n    };\n    addMarriagePlace = function(marriagePlace) {\n        this.marriagePlace = normalizePlace(marriagePlace);\n    };\n}\nclass MyDate {\n    constructor(date){\n        var day, month, year;\n        if (date) {\n            var arr = date.split(\" \");\n            for(var i in arr){\n                var elem = arr[i];\n                var num = parseInt(elem);\n                if (num > 0 && num < 32) day = num.toString();\n                else if (isNaN(num)) month = months[elem.toLowerCase()];\n                else if (elem.length == 4) year = elem;\n            }\n        }\n        this.day = day;\n        this.month = month;\n        this.year = year;\n        this.original = date;\n    }\n}\nvar months = {\n    \"january\": \"January\",\n    \"jan\": \"January\",\n    \"february\": \"February\",\n    \"feb\": \"February\",\n    \"mar\": \"March\",\n    \"march\": \"March\",\n    \"apr\": \"April\",\n    \"april\": \"April\",\n    \"may\": \"May\",\n    \"jun\": \"June\",\n    \"june\": \"June\",\n    \"july\": \"July\",\n    \"jul\": \"July\",\n    \"august\": \"August\",\n    \"aug\": \"August\",\n    \"september\": \"September\",\n    \"sept\": \"September\",\n    \"october\": \"October\",\n    \"oct\": \"October\",\n    \"november\": \"November\",\n    \"nov\": \"November\",\n    \"december\": \"December\",\n    \"dec\": \"December\"\n};\nclass Name {\n    constructor(person){\n        let given;\n        let surname;\n        let names = person.names;\n        if (names) {\n            let preferredNameIndex = 0;\n            let counter = 0;\n            while(counter < names.length && !names[counter].preferred){\n                counter++;\n            }\n            if (names[counter].preferred) {\n                preferredNameIndex = counter;\n            }\n            let forms = names[preferredNameIndex].nameForms;\n            if (forms && forms[0]) {\n                let parts = forms[0].parts;\n                for(let i in parts){\n                    if (parts[i].type === \"http://gedcomx.org/Given\") {\n                        let name = parts[i].value;\n                        if (name.toLowerCase() !== \"unknown\") {\n                            given = name;\n                        }\n                    } else if (parts[i].type === \"http://gedcomx.org/Surname\") {\n                        let name = parts[i].value;\n                        if (name.toLowerCase() !== \"unknown\") {\n                            surname = name;\n                        }\n                    }\n                }\n            }\n        }\n        this.full = person.display.name;\n        this.given = given;\n        this.first = given ? given.split(\" \")[0] : undefined;\n        //this.middle = given ? given.replace(this.first + \" \", '') : undefined;\n        this.last = surname;\n        this.compressedName = (this.first.replace(/\\s/g, \"\") + this.last.replace(/\\s/g, \"\")).toUpperCase();\n        //this.compressedName = this.full.replace(/[\\s.,-]/g, '').toUpperCase();\n        this.isFull = !!this.full && !!given && !!surname;\n    }\n}\nvar normalizePlace = function(place) {\n    if (place) {\n        var array = place.split(/,\\s*/);\n        var country = getCountry(place);\n        if (country) array[array.length - 1] = country;\n        //remove duplicates\n        for(var i in array){\n            for(var j in array){\n                if (i != j && array[i] == array[j]) {\n                    array.splice(i, 1);\n                }\n            }\n        }\n        //remove blanks\n        for(var i in array){\n            if (array[i].search(/[a-zA-Z]/) < 0) array.splice(i, 1);\n        }\n        if (array.length > 3) {\n            array.splice(1, array.length - 3);\n        }\n        return array.join(\", \");\n    }\n};\nfunction getOccupation(person) {\n    if (!person.facts || !person.facts.length) return undefined;\n    for (let f of person.facts){\n        if (f.type == \"http://gedcomx.org/Occupation\" && f.value) {\n            if (f.value.includes(\"Laborer\") || f.value.includes(\"Retired\")) continue;\n            return f.value;\n        }\n    }\n    return undefined;\n}\nfunction getCountry(place) {\n    if (place) {\n        var arr = place.split(/,\\s*/);\n        var key = arr[arr.length - 1].toLowerCase().split(\".\").join(\"\");\n        return countryMap[key];\n    }\n    return undefined;\n}\nvar countryMap = {\n    \"us\": \"United States\",\n    \"usa\": \"United States\",\n    \"united states\": \"United States\",\n    \"united states of america\": \"United States\",\n    \"alabama\": \"United States\",\n    \"al\": \"United States\",\n    \"alaska\": \"United States\",\n    \"ak\": \"United States\",\n    \"arizona\": \"United States\",\n    \"ar\": \"United States\",\n    \"arkansas\": \"United States\",\n    \"ar\": \"United States\",\n    \"california\": \"United States\",\n    \"ca\": \"United States\",\n    \"cal\": \"United States\",\n    \"colorado\": \"United States\",\n    \"co\": \"United States\",\n    \"connecticut\": \"United States\",\n    \"ct\": \"United States\",\n    \"conn\": \"United States\",\n    \"delaware\": \"United States\",\n    \"de\": \"United States\",\n    \"florida\": \"United States\",\n    \"fl\": \"United States\",\n    \"georgia\": \"United States\",\n    \"ga\": \"United States\",\n    \"hawaii\": \"United States\",\n    \"hi\": \"United States\",\n    \"idaho\": \"United States\",\n    \"id\": \"United States\",\n    \"illinois\": \"United States\",\n    \"il\": \"United States\",\n    \"indiana\": \"United States\",\n    \"in\": \"United States\",\n    \"iowa\": \"United States\",\n    \"ia\": \"United States\",\n    \"kansas\": \"United States\",\n    \"ks\": \"United States\",\n    \"kentucky\": \"United States\",\n    \"ky\": \"United States\",\n    \"louisianna\": \"United States\",\n    \"la\": \"United States\",\n    \"main\": \"United States\",\n    \"me\": \"United States\",\n    \"maryland\": \"United States\",\n    \"md\": \"United States\",\n    \"massachusetts\": \"United States\",\n    \"ma\": \"United States\",\n    \"michigan\": \"United States\",\n    \"mi\": \"United States\",\n    \"minnesota\": \"United States\",\n    \"mn\": \"United States\",\n    \"mississippi\": \"United States\",\n    \"ms\": \"United States\",\n    \"missouri\": \"United States\",\n    \"mo\": \"United States\",\n    \"montana\": \"United States\",\n    \"mt\": \"United States\",\n    \"nebraska\": \"United States\",\n    \"ne\": \"United States\",\n    \"nevada\": \"United States\",\n    \"nv\": \"United States\",\n    \"new hampshire\": \"United States\",\n    \"nh\": \"United States\",\n    \"new jersey\": \"United States\",\n    \"nj\": \"United States\",\n    \"new mexico\": \"United States\",\n    \"nm\": \"United States\",\n    \"new york\": \"United States\",\n    \"ny\": \"United States\",\n    \"north carolina\": \"United States\",\n    \"nc\": \"United States\",\n    \"north dakota\": \"United States\",\n    \"nd\": \"United States\",\n    \"ohio\": \"United States\",\n    \"oh\": \"United States\",\n    \"oklahoma\": \"United States\",\n    \"ok\": \"United States\",\n    \"oregon\": \"United States\",\n    \"or\": \"United States\",\n    \"pennsylvania\": \"United States\",\n    \"pa\": \"United States\",\n    \"penn\": \"United States\",\n    \"rhode island\": \"United States\",\n    \"ri\": \"United States\",\n    \"south carolina\": \"United States\",\n    \"sc\": \"United States\",\n    \"south dakota\": \"United States\",\n    \"sd\": \"United States\",\n    \"tennessee\": \"United States\",\n    \"tn\": \"United States\",\n    \"texas\": \"United States\",\n    \"tx\": \"United States\",\n    \"utah territory\": \"United States\",\n    \"utah\": \"United States\",\n    \"ut\": \"United States\",\n    \"vermont\": \"United States\",\n    \"vt\": \"United States\",\n    \"virginia\": \"United States\",\n    \"va\": \"United States\",\n    \"washington\": \"United States\",\n    \"wa\": \"United States\",\n    \"west virginia\": \"United States\",\n    \"wv\": \"United States\",\n    \"wisconsin\": \"United States\",\n    \"wi\": \"United States\",\n    \"wyoming\": \"United States\",\n    \"wy\": \"United States\",\n    \"afghanistan\": \"Afghanistan\",\n    \"al\": \"Albania\",\n    \"alb\": \"Albania\",\n    \"albania\": \"Albania\",\n    \"algeria\": \"Algeria\",\n    \"ad\": \"Andorra\",\n    \"add\": \"Andorra\",\n    \"andorra\": \"Andorra\",\n    \"angola\": \"Angola\",\n    \"anguilla\": \"Aungilla\",\n    \"antigua and barbuda\": \"Antigua and Barbuda\",\n    \"antigua\": \"Antigua and Barbuda\",\n    \"barbuda\": \"Antigua and Barbuda\",\n    \"antigua & barbuda\": \"Antigua and Barbuda\",\n    \"argentina\": \"Argentina\",\n    \"am\": \"Armenia\",\n    \"arm\": \"Armenia\",\n    \"armenia\": \"Armenia\",\n    \"aruba\": \"Aruba\",\n    \"australia\": \"Australia\",\n    \"at\": \"Austria\",\n    \"aut\": \"Austria\",\n    \"austria\": \"Austria\",\n    \"az\": \"Azerbaijan\",\n    \"aze\": \"Azerbaijan\",\n    \"azerbaijan\": \"Azerbaijan\",\n    \"bahamas\": \"Bahamas\",\n    \"bahrain\": \"Bahrain\",\n    \"bangladesh\": \"Bangladesh\",\n    \"barbados\": \"Barbados\",\n    \"by\": \"Belarus\",\n    \"blr\": \"Belarus\",\n    \"belarus\": \"Belarus\",\n    \"be\": \"Belgium\",\n    \"bel\": \"Belgium\",\n    \"belgium\": \"Belgium\",\n    \"belize\": \"Belize\",\n    \"belice\": \"Belize\",\n    \"benin\": \"Benin\",\n    \"bemuda\": \"Bermuda\",\n    \"bhutan\": \"Bhutan\",\n    \"bolivia\": \"Bolivia\",\n    \"ba\": \"Bosnia and Herzegovina\",\n    \"bih\": \"Bosnia and Herzegovina\",\n    \"bosnia and herzegovina\": \"Bosnia and Herzegovina\",\n    \"botswana\": \"Botswana\",\n    \"brazil\": \"Brazil\",\n    \"british virgin islands\": \"British Virgin Islands\",\n    \"brunei\": \"Brunei\",\n    \"bg\": \"Bulgaria\",\n    \"bgr\": \"Bulgaria\",\n    \"bulgaria\": \"Bulgaria\",\n    \"burkina faso\": \"Burkina Faso\",\n    \"burundi\": \"Burundi\",\n    \"cabo verde\": \"Cabo Verde\",\n    \"cape verde\": \"Cabo Verde\",\n    \"verde cape\": \"Cabo Verde\",\n    \"cape green\": \"Cabo Verde\",\n    \"green cape\": \"Cabo Verde\",\n    \"cambodia\": \"Cambodia\",\n    \"cameroon\": \"Cameroon\",\n    \"canada\": \"Canada\",\n    \"cayman islands\": \"Cayman Islands\",\n    \"central african republic\": \"Central African Republic\",\n    \"chad\": \"Chad\",\n    \"chile\": \"Chile\",\n    \"china\": \"China\",\n    \"colombia\": \"Colombia\",\n    \"columbia\": \"Colombia\",\n    \"comoros\": \"Comoros\",\n    \"cook islands\": \"Cook Islands\",\n    \"democratic republic of the congo\": \"Democratic Republic of the Congo\",\n    \"republic of the congo\": \"Republic of the Congo\",\n    \"congo\": \"Republic of the Congo\",\n    \"costa rica\": \"Costa Rica\",\n    \"cote d'ivoire\": \"Cote D'Ivoire\",\n    \"ivory coast\": \"Cote D'Ivoire\",\n    \"hr\": \"Croatia\",\n    \"hrv\": \"Croatia\",\n    \"croatia\": \"Croatia\",\n    \"cuba\": \"Cuba\",\n    \"cy\": \"Cyprus\",\n    \"cyp\": \"Cyprus\",\n    \"cyprus\": \"Cyprus\",\n    \"cz\": \"Czech Republic\",\n    \"cze\": \"Czech Republic\",\n    \"czech republic\": \"Czech Republic\",\n    \"dk\": \"Denmark\",\n    \"dnk\": \"Denmark\",\n    \"danmark\": \"Denmark\",\n    \"dnmk\": \"Denmark\",\n    \"denmark\": \"Denmark\",\n    \"djibouti\": \"Djibouti\",\n    \"dominica\": \"Dominica\",\n    \"Dominican Republic\": \"Dominican Republic\",\n    \"dr\": \"Dominican Republic\",\n    \"ecuador\": \"Ecuador\",\n    \"egypt\": \"Egypt\",\n    \"el salvador\": \"El Salvador\",\n    \"salvador\": \"El Salvador\",\n    \"equatorial guinea\": \"Equatorial Guinea\",\n    \"eritrea\": \"Eritrea\",\n    \"ee\": \"Estonia\",\n    \"est\": \"Estonia\",\n    \"estonia\": \"Estonia\",\n    \"ethopia\": \"Ethiopia\",\n    \"falkland islands\": \"Falkland Islands\",\n    \"faroe islands\": \"Faroe Islands\",\n    \"fiji\": \"Fiji\",\n    \"fi\": \"Finland\",\n    \"fin\": \"Finland\",\n    \"finland\": \"Finland\",\n    \"fr\": \"France\",\n    \"fra\": \"France\",\n    \"france\": \"France\",\n    \"french polynesia\": \"French Polynesia\",\n    \"french west indies\": \"French West Indies\",\n    \"gabon\": \"Gabon\",\n    \"gambia\": \"Gambia\",\n    \"ge\": \"Georgia\",\n    \"geo\": \"Georgia\",\n    \"georgia\": \"Georgia\",\n    \"de\": \"Germany\",\n    \"deu\": \"Germany\",\n    \"germany\": \"Germany\",\n    \"ghana\": \"Ghana\",\n    \"gibraltar\": \"Gibraltar\",\n    \"gr\": \"Greece\",\n    \"grc\": \"Greece\",\n    \"greece\": \"Greece\",\n    \"greenland\": \"Greenland\",\n    \"grenada\": \"Grenada\",\n    \"guam\": \"Guam\",\n    \"guatemala\": \"Guatemala\",\n    \"geurnsey\": \"Geurnsey\",\n    \"guinea\": \"Guinea\",\n    \"guinea-bissau\": \"Guinea-Bissau\",\n    \"guinea bissau\": \"Guinea-Bissau\",\n    \"guineabissau\": \"Guinea-Bissau\",\n    \"guyana\": \"Guyana\",\n    \"haiti\": \"Haiti\",\n    \"honduras\": \"Honduras\",\n    \"hong kong\": \"Hong Kong\",\n    \"hu\": \"Hungary\",\n    \"hun\": \"Hungary\",\n    \"hungary\": \"Hungary\",\n    \"is\": \"Iceland\",\n    \"isl\": \"Iceland\",\n    \"iceland\": \"Iceland\",\n    \"india\": \"India\",\n    \"indonesia\": \"Indonesia\",\n    \"iran\": \"Iran\",\n    \"iraq\": \"Iraq\",\n    \"ie\": \"Ireland\",\n    \"irl\": \"Ireland\",\n    \"ireland\": \"Ireland\",\n    \"isle of man\": \"Isle of Man\",\n    \"israel\": \"Israel\",\n    \"it\": \"Italy\",\n    \"ita\": \"Italy\",\n    \"italy\": \"Italy\",\n    \"jamaica\": \"Jamaica\",\n    \"japan\": \"Japan\",\n    \"jersey\": \"Jersey\",\n    \"jordan\": \"Jordan\",\n    \"kazakhstan\": \"Kazakhstan\",\n    \"kazakstan\": \"Kazakhstan\",\n    \"kenya\": \"Kenya\",\n    \"kiribati\": \"Kiribati\",\n    \"kosovo\": \"Kosovo\",\n    \"kuwait\": \"Kuwait\",\n    \"kyrgyzstan\": \"Kyrgystan\",\n    \"kyrgyz republic\": \"Kyrgyz Republic\",\n    \"kyrgyz\": \"Kyrgyz Republic\",\n    \"laos\": \"Laos\",\n    \"latvia\": \"Latvia\",\n    \"lebanon\": \"Lebanon\",\n    \"lesotho\": \"Lesotho\",\n    \"liberia\": \"Liberia\",\n    \"libya\": \"Libya\",\n    \"libia\": \"Libya\",\n    \"li\": \"Liechtenstein\",\n    \"lie\": \"Liechtenstein\",\n    \"liechtenstein\": \"Liechtenstein\",\n    \"lt\": \"Lithuania\",\n    \"ltu\": \"Lithuania\",\n    \"lithuania\": \"Lithuania\",\n    \"lu\": \"Luxembourg\",\n    \"lux\": \"Luxembourg\",\n    \"luxembourg\": \"Luxembourg\",\n    \"macau\": \"Macau\",\n    \"macedonia\": \"Macedonia\",\n    \"madagascar\": \"Madagascar\",\n    \"malawi\": \"Malawi\",\n    \"malaysia\": \"Malaysia\",\n    \"maldives\": \"Maldives\",\n    \"mali\": \"Mali\",\n    \"malta\": \"Malta\",\n    \"marshall islands\": \"Marshall Islands\",\n    \"mauritania\": \"Mauritania\",\n    \"mauritius\": \"Mauritius\",\n    \"mexico\": \"Mexico\",\n    \"mejico\": \"Mexico\",\n    \"micronesia\": \"Micronesia\",\n    \"moldova\": \"Moldova\",\n    \"monaco\": \"Monaco\",\n    \"mongolia\": \"Mongolia\",\n    \"montenegro\": \"Montenegro\",\n    \"montserrat\": \"Montserrat\",\n    \"montserat\": \"Montserrat\",\n    \"morocco\": \"Morocco\",\n    \"moroco\": \"Morocco\",\n    \"mozambique\": \"Mozambique\",\n    \"myanmar\": \"Myanmar\",\n    \"burma\": \"Myanmar\",\n    \"namibia\": \"Namibia\",\n    \"nauru\": \"Nauru\",\n    \"nepal\": \"Nepal\",\n    \"nl\": \"Netherlands\",\n    \"nld\": \"Netherlands\",\n    \"netherlands\": \"Netherlands\",\n    \"netherlands antilles\": \"Netherlands Antilles\",\n    \"antilles\": \"Netherlands Antilles\",\n    \"new caledonia\": \"New Caledonia\",\n    \"new zealand\": \"New Zealand\",\n    \"nicaragua\": \"Nicaragua\",\n    \"niger\": \"Niger\",\n    \"nigeria\": \"Nigeria\",\n    \"north korea\": \"North Korea\",\n    \"no\": \"Norway\",\n    \"nor\": \"Norway\",\n    \"norway\": \"Norway\",\n    \"oman\": \"Oman\",\n    \"ottoman empire\": \"Ottoman Empire\",\n    \"pakistan\": \"Pakistan\",\n    \"palau\": \"Palau\",\n    \"palestine\": \"Palestine\",\n    \"panama\": \"Panama\",\n    \"papua new guinea\": \"Papua New Guinea\",\n    \"papa new guinea\": \"Papua New Guinea\",\n    \"paraguay\": \"Paraguay\",\n    \"peru\": \"Peru\",\n    \"philippines\": \"Philippines\",\n    \"pl\": \"Poland\",\n    \"pol\": \"Poland\",\n    \"poland\": \"Poland\",\n    \"pt\": \"Portugal\",\n    \"prt\": \"Portugal\",\n    \"portugal\": \"Portugal\",\n    \"prussia\": \"Prussia\",\n    \"puerto rico\": \"Puerto Rico\",\n    \"porta rico\": \"Puerto Rico\",\n    \"porto rico\": \"Puerto Rico\",\n    \"qatar\": \"Qatar\",\n    \"reunion\": \"Reunion\",\n    \"ro\": \"Romania\",\n    \"rou\": \"Romania\",\n    \"romania\": \"Romania\",\n    \"ru\": \"Russia\",\n    \"rus\": \"Russia\",\n    \"russia\": \"Russia\",\n    \"rwanda\": \"Rwanda\",\n    \"saint kitts and nevis\": \"Saint Kitts and Nevis\",\n    \"st kitts and nevis\": \"Saint Kitts and Nevis\",\n    \"st. kitts and nevis\": \"Saint Kitts and Nevis\",\n    \"saint kitts & nevis\": \"Saint Kitts and Nevis\",\n    \"st kitts & nevis\": \"Saint Kitts and Nevis\",\n    \"st. kitts & nevix\": \"Saint Kitts and Nevis\",\n    \"saint lucia\": \"Saint Lucia\",\n    \"st lucia\": \"Saint Lucia\",\n    \"st. lucia\": \"Saint Luica\",\n    \"saint pierre and miquelon\": \"Saint Pierre and Miquelon\",\n    \"st pierre and miquelon\": \"Saint Pierre and Miquelon\",\n    \"st. pierre and miquelon\": \"Saint Pierre and Miquelon\",\n    \"saint pierre & miquelon\": \"Saint Pierre and Miquelon\",\n    \"st pierre & miquelon\": \"Saint Pierre and Miquelon\",\n    \"st. pierre & miquelon\": \"Saint Pierre and Miquelon\",\n    \"saint vincent and the grenadines\": \"Saint Vincent and the Grenadines\",\n    \"st vincent and the grenadines\": \"Saint Vincent and the Grenadines\",\n    \"st. vincent and the grenadines\": \"Saint Vincent and the Grenadines\",\n    \"saint vincent & the grenadines\": \"Saint Vincent and the Grenadines\",\n    \"st vincent & the grenadines\": \"Saint Vincent and the Grenadines\",\n    \"st. vincent & the grenadines\": \"Saint Vincent and the Grenadines\",\n    \"saint vincent and grenadines\": \"Saint Vincent and the Grenadines\",\n    \"st vincent and grenadines\": \"Saint Vincent and the Grenadines\",\n    \"st. vincent and grenadines\": \"Saint Vincent and the Grenadines\",\n    \"saint vincent & grenadines\": \"Saint Vincent and the Grenadines\",\n    \"st vincent & grenadines\": \"Saint Vincent and the Grenadines\",\n    \"st. vincent & grenadines\": \"Saint Vincent and the Grenadines\",\n    \"samoa\": \"Samoa\",\n    \"san marino\": \"San Marino\",\n    \"sao tome and principe\": \"Sao Tome and Principe\",\n    \"saint thomas and prince\": \"Sao Tome and Principe\",\n    \"sao tome & principe\": \"Sao Tome and Principe\",\n    \"saint thomas and principe\": \"Sao Tome and Principe\",\n    \"saint thomas & prince\": \"Sao Tome and Principe\",\n    \"saudi arabia\": \"Saudi Arabia\",\n    \"senegal\": \"Senegal\",\n    \"rs\": \"Serbia\",\n    \"srb\": \"Serbia\",\n    \"serbia\": \"Serbia\",\n    \"seychelles\": \"Seychelles\",\n    \"sierra leone\": \"Sierre Leone\",\n    \"singapore\": \"Singapore\",\n    \"sk\": \"Slovakia\",\n    \"svk\": \"Slovakia\",\n    \"slovakia\": \"Slovakia\",\n    \"si\": \"Slovenia\",\n    \"svn\": \"Slovenia\",\n    \"slovenia\": \"Slovenia\",\n    \"solomon islands\": \"Solomon Islands\",\n    \"somalia\": \"Somalia\",\n    \"south africa\": \"South Africa\",\n    \"south korea\": \"South Korea\",\n    \"south sudan\": \"South Sudan\",\n    \"es\": \"Spain\",\n    \"esp\": \"Spain\",\n    \"spain\": \"Spain\",\n    \"sri lanka\": \"Sri Lanka\",\n    \"sudan\": \"Sudan\",\n    \"suriname\": \"Suriname\",\n    \"swaziland\": \"Swaziland\",\n    \"se\": \"Sweden\",\n    \"see\": \"Sweden\",\n    \"swed\": \"Sweden\",\n    \"sweden\": \"Sweden\",\n    \"sverige\": \"Sweden\",\n    \"ch\": \"Switzerland\",\n    \"che\": \"Switzerland\",\n    \"switzerland\": \"Switzerland\",\n    \"syria\": \"Syria\",\n    \"taiwan\": \"Taiwan\",\n    \"tajikistan\": \"Tajikistan\",\n    \"tajikstan\": \"Tajikistan\",\n    \"tanzania\": \"Tanzania\",\n    \"thailand\": \"Thailand\",\n    \"timor-leste\": \"Timor-Leste\",\n    \"timor leste\": \"Timor-Leste\",\n    \"timorleste\": \"Timor-Leste\",\n    \"togo\": \"Togo\",\n    \"tonga\": \"Tonga\",\n    \"trinidad and tobago\": \"Trinidad and Tobago\",\n    \"trinidad & tobago\": \"Trinidad and Tobago\",\n    \"tunisia\": \"Tunisia\",\n    \"tr\": \"Turkey\",\n    \"tur\": \"Turkey\",\n    \"turkey\": \"Turkey\",\n    \"turkmenistan\": \"Turkmenistan\",\n    \"turkestan\": \"Turkmenistan\",\n    \"turks and caicos\": \"Turks and Caicos\",\n    \"turks & caicos\": \"Turks and Caicos\",\n    \"tuvalu\": \"Tuvalu\",\n    \"uganda\": \"Uganda\",\n    \"ua\": \"Ukraine\",\n    \"ukr\": \"Ukraine\",\n    \"ukraine\": \"Ukraine\",\n    \"united arab emirates\": \"United Arab Emirates\",\n    \"scotland\": \"United Kingdom\",\n    \"scot\": \"United Kingdom\",\n    \"gb\": \"United Kingdom\",\n    \"gbr\": \"United Kingdom\",\n    \"uk\": \"United Kingdom\",\n    \"en\": \"United Kingdom\",\n    \"eng\": \"United Kingdom\",\n    \"england\": \"United Kingdom\",\n    \"great britain\": \"United Kingdom\",\n    \"united kingdom\": \"United Kingdom\",\n    \"uruguay\": \"Uruguay\",\n    \"uzbekistan\": \"Uzbekistan\",\n    \"vanuatu\": \"Vanuatu\",\n    \"vanautu\": \"Vanuatu\",\n    \"vatican city\": \"Vatican City\",\n    \"holy see\": \"Vatican City\",\n    \"vatican\": \"Vatican City\",\n    \"the vatican\": \"Vatican City\",\n    \"the vatican city\": \"Vatican City\",\n    \"the holy see\": \"Vatican City\",\n    \"venezuela\": \"Venezuela\",\n    \"vietnam\": \"Vietnam\",\n    \"virgin islands\": \"Virgin Islands\",\n    \"yemen\": \"Yemen\",\n    \"zambia\": \"Zambia\",\n    \"zimbabwe\": \"Zimbabwe\",\n    \"rhodesia\": \"Zimbabwe\",\n    \"rodesia\": \"Zimbabwe\",\n    \"england\": \"England\",\n    \"scotland\": \"Scotland\",\n    \"wales\": \"Wales\",\n    \"northern ireland\": \"Northern Ireland\",\n    \"n ireland\": \"Northern Ireland\",\n    \"n. ireland\": \"Northern Ireland\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./data/fsdatastructures.js\n");

/***/ }),

/***/ "(api)/./pages/api/questiongenerator.js":
/*!****************************************!*\
  !*** ./pages/api/questiongenerator.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _data_fsdatastructures__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../data/fsdatastructures */ \"(api)/./data/fsdatastructures.js\");\n\nvar fsData = null;\nlet rare = true;\nvar limit;\nfunction handler(req, res) {\n    if (req.method === \"POST\") {\n        fsData = new _data_fsdatastructures__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n        const map = new Map(Object.entries(req.body.userFSData));\n        fsData.setPersons(map);\n        var ascendancyNums = req.body.ascendancyNums;\n        var promptArray = new Array;\n        //console.log('req: ', req.body)\n        //console.log(\"size before becoming a map \" + Object.entries(req.body.userFSData).length);\n        //console.log(\"map length \" + map.size)\n        //console.log(ascendancyNums);\n        //console.log(\"tree \" + Array.from(fsData.personMap.values()));\n        //console.log(fsData.personMap);\n        console.log(\"ascendency nums\", ascendancyNums);\n        ascendancyNums.forEach((num)=>{\n            let person = fsData.personMap.get(num.toString());\n            let result = generatePrompt(person);\n            promptArray.push(result);\n        });\n        //console.log(promptArray.length)\n        console.log(promptArray);\n        res.status(201).json(promptArray);\n    } else {\n        res.status(405).json(\"request method must be POST\");\n    }\n};\n/*\r\nPotential question categories:\r\n\r\nrelationships (sibling count) (paternal vs maternal family) (birth order)\r\noccupations\r\nplaces or times of events (hometown) (marriage place) (age at death)\r\n(maybe) life events during famous time periods\r\n*/ function generatePrompt(person) {\n    return questions[Math.floor(Math.random() * questions.length)](person);\n// if (rare) {\n//     //prioritize less common questions\n//     rare = false;\n//     limit = rareQuestions.length;\n//     let result = rareQuestions[Math.floor(Math.random() * rareQuestions.length)](person);\n//     if (result != null) { return result; }\n//     else { return questions[Math.floor(Math.random() * questions.length)](person); }\n// }\n// else {\n//     rare = true;\n//     return questions[Math.floor(Math.random() * questions.length)](person);\n// }\n}\nconst questions = [\n    function(person) {\n        return q0(person);\n    },\n    function(person) {\n        return q1(person);\n    },\n    function(person) {\n        return q2(person);\n    },\n    function(person) {\n        return q3(person);\n    },\n    function(person) {\n        return q4(person);\n    },\n    function(person) {\n        return q5(person);\n    },\n    function(person) {\n        return q6(person);\n    },\n    function(person) {\n        return q7(person);\n    },\n    function(person) {\n        return q8(person);\n    }, \n];\nconst q0 = function(person) {\n    if (fsData.getSpouse(person.a_num) != null) {\n        return {\n            clue: \"The name of \" + fsData.getSpouse(person.a_num).name.full + \"'s spouse.\",\n            answer: person.name.compressedName\n        };\n    } else {\n        return q1(person);\n    }\n};\nconst q1 = function(person) {\n    if (fsData.getChild(person.a_num)) {\n        return {\n            clue: fsData.getChild(person.a_num).name.full + \" is this \" + (person.gender == \"Male\" ? \"man\" : \"woman\") + \"'s child.\",\n            answer: person.name.compressedName\n        };\n    } else {\n        var rand = Math.floor(Math.random() * 2);\n        if (rand == 0) {\n            return q2(person);\n        } else return q3(person);\n    }\n};\nconst q2 = function(person) {\n    console.log(\"IN q2 \");\n    if (fsData.getChild(person.a_num) && person.gender === \"Male\") {\n        console.log(\"IN q2 if statement\");\n        return {\n            clue: \"This person is the father of \" + fsData.getChild(person.a_num).name.full + \".\",\n            answer: person.name.compressedName\n        };\n    } else {\n        return q4(person);\n    }\n};\nconst q3 = function(person) {\n    if (fsData.getChild(person.a_num) && person.gender === \"Female\") {\n        console.log(\"IN q3\");\n        return {\n            clue: \"This person is the mother of \" + fsData.getChild(person.a_num).name.full + \".\",\n            answer: person.name.compressedName\n        };\n    } else {\n        return q4(person);\n    }\n};\nconst q4 = function(person) {\n    if (fsData.getFather(person.a_num)) {\n        console.log(\"In q4 if\");\n        return {\n            clue: \"This person is the child of \" + fsData.getFather(person.a_num).name.full + \".\",\n            answer: person.name.compressedName\n        };\n    } else {\n        return q5(person);\n    }\n};\nconst q5 = function(person) {\n    if (fsData.getMother(person.a_num)) {\n        console.log(\"In q5 if\");\n        return {\n            clue: \"This person is the child of \" + fsData.getMother(person.a_num).name.full + \".\",\n            answer: person.name.compressedName\n        };\n    } else {\n        return q6(person);\n    }\n};\nconst q6 = function(person) {\n    if (person.deathPlace && person.lifespan.years && person.deathDate.year) {\n        return {\n            clue: \"This person died in \" + person.deathPlace + \" at the age of \" + person.lifespan.years + \" in \" + person.deathDate.year + \".\",\n            answer: person.name.compressedName\n        };\n    } else {\n        return q7(person);\n    }\n};\nconst q7 = function(person) {\n    if (person.birthPlace && person.birthDate.year && person.birthDate.month && person.birthDate.day) {\n        return {\n            clue: \"This person was born in \" + person.birthPlace + \" in \" + person.birthDate.month + \" \" + person.birthDate.day + \", \" + person.birthDate.year + \".\",\n            answer: person.name.compressedName\n        };\n    } else {\n        return q8(person);\n    }\n};\nconst q8 = function(person) {\n    if (person.birthPlace && person.birthDate.year) {\n        return {\n            clue: \"This person was born in \" + person.birthPlace + \" in \" + person.birthDate.year + \".\",\n            answer: person.name.compressedName\n        };\n    } else {\n        return q0(person);\n    }\n} //rare questions\n // const rareQuestions = [\n //     function(person) { return r0(person); },\n // ]\n // const r0 = function(person) {\n //     if (person.deathPlace && person.lifespan.years) { return {\n //         clue: \"This person died in \" + person.deathPlace + \" at the age of \" + person.lifespan.years + \".\",\n //         answer: person.name.compressedName,\n //     }} else {\n //         limit--; if (limit == 0) { return null; }\n //         return r0(person);\n //     }\n // }\n // Question groupings\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/questiongenerator.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/questiongenerator.js"));
module.exports = __webpack_exports__;

})();